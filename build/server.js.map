{"version":3,"sources":["webpack:///webpack/bootstrap 59f99a613b5e57a3804a","webpack:///c:/My Files/Copy/Development/Projects/Github/Klesk/server.js","webpack:///c:/My Files/Copy/Development/Projects/Github/Klesk/config.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///c:/My Files/Copy/Development/Projects/Github/Klesk/app/logger.js","webpack:///c:/My Files/Copy/Development/Projects/Github/Klesk/app/routes.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,aAAY,CAAC;;;;mCAEM,CAAU;;;;sCACV,CAAc;;;;sCACd,CAAc;;;;oCAEb,CAAS;;;;uCACN,CAAa;;;;AAEpC,KAAI,GAAG,GAAG,2BAAS,CAAC;AACpB,IAAG,CAAC,GAAG,CAAC,wBAAW,IAAI,EAAE,CAAC,CAAC;;AAE3B,wBAAO,SAAS,CAAC,GAAG,CAAC,CAAC;;AAEtB,KAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,oBAAO,IAAI,CAAC;AAC3C,IAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEjB,6BAAO,oBAAoB,GAAG,IAAI,CAAC,C;;;;;;;;;;;sBCjBpB;AACX,SAAI,EAAE,IAAI;EACb;;;;;;;;ACFD,qC;;;;;;ACAA,yC;;;;;;ACAA,aAAY,CAAC;;;;;;sBAEE,UAAS,OAAO,EAAE;AAC7B,YAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EACxB;;;;;;;;ACJD,aAAY,CAAC;;;;;;;;mCAEM,CAAU;;;;AAE7B,KAAI,SAAS,GAAG,SAAZ,SAAS,CAAY,GAAG,EAAE;;AAE1B,QAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACvB,YAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;MAC/B,CAAC,CAAC;;AAEH,QAAG,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACxB,kCAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AACjB,YAAG,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;MACxC,CAAC,CAAC;EAEN,CAAC;;sBAEa;AACX,cAAS,EAAE,SAAS;EACvB","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 59f99a613b5e57a3804a\n **/","'use strict';\r\n\r\nimport config from './config';\r\nimport logger from './app/logger';\r\nimport routes from './app/routes';\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\n\r\nvar app = express();\r\napp.use(bodyParser.json());\r\n\r\nroutes.configure(app);\r\n\r\nvar port = process.env.PORT || config.port;\r\napp.listen(port);\r\n\r\nlogger('Listening on port ' + port);\n\n\n/** WEBPACK FOOTER **\n ** c:/My Files/Copy/Development/Projects/Github/Klesk/server.js\n **/","export default {\r\n    port: 1666\r\n};\n\n\n/** WEBPACK FOOTER **\n ** c:/My Files/Copy/Development/Projects/Github/Klesk/config.js\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\r\n\r\nexport default function(message) {\r\n    console.log(message);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** c:/My Files/Copy/Development/Projects/Github/Klesk/app/logger.js\n **/","'use strict';\r\n\r\nimport logger from './logger';\r\n\r\nlet configure = function(app) {\r\n\r\n    app.get('/', (req, res) => {\r\n        res.end(\"hello from Klesk\");\r\n    });\r\n\r\n    app.post('/', (req, res) => {\r\n        logger(req.body);\r\n        res.end(\"congratulation it works !\");\r\n    });\r\n\r\n};\r\n\r\nexport default {\r\n    configure: configure\r\n};\n\n\n/** WEBPACK FOOTER **\n ** c:/My Files/Copy/Development/Projects/Github/Klesk/app/routes.js\n **/"],"sourceRoot":""}